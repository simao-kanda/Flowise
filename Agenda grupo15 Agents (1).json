{
  "nodes": [
    {
      "id": "supervisor_0",
      "position": {
        "x": 231.066390081939,
        "y": -81.08417763120809
      },
      "type": "customNode",
      "data": {
        "id": "supervisor_0",
        "label": "Supervisor",
        "version": 3,
        "name": "supervisor",
        "type": "Supervisor",
        "baseClasses": [
          "Supervisor"
        ],
        "category": "Multi Agents",
        "inputParams": [
          {
            "label": "Supervisor Name",
            "name": "supervisorName",
            "type": "string",
            "placeholder": "Supervisor",
            "default": "Supervisor",
            "id": "supervisor_0-input-supervisorName-string"
          },
          {
            "label": "Supervisor Prompt",
            "name": "supervisorPrompt",
            "type": "string",
            "description": "Prompt must contains {team_members}",
            "rows": 4,
            "default": "You are a supervisor tasked with managing a conversation between the following workers: {team_members}.\nGiven the following user request, respond with the worker to act next.\nEach worker will perform a task and respond with their results and status.\nWhen finished, respond with FINISH.\nSelect strategically to minimize the number of steps taken.",
            "additionalParams": true,
            "id": "supervisor_0-input-supervisorPrompt-string"
          },
          {
            "label": "Summarization",
            "name": "summarization",
            "type": "boolean",
            "description": "Return final output as a summarization of the conversation",
            "optional": true,
            "additionalParams": true,
            "id": "supervisor_0-input-summarization-boolean"
          },
          {
            "label": "Recursion Limit",
            "name": "recursionLimit",
            "type": "number",
            "description": "Maximum number of times a call can recurse. If not provided, defaults to 100.",
            "default": 100,
            "additionalParams": true,
            "id": "supervisor_0-input-recursionLimit-number"
          }
        ],
        "inputAnchors": [
          {
            "label": "Tool Calling Chat Model",
            "name": "model",
            "type": "BaseChatModel",
            "description": "Only compatible with models that are capable of function calling: ChatOpenAI, ChatMistral, ChatAnthropic, ChatGoogleGenerativeAI, GroqChat. Best result with GPT-4 model",
            "id": "supervisor_0-input-model-BaseChatModel"
          },
          {
            "label": "Agent Memory",
            "name": "agentMemory",
            "type": "BaseCheckpointSaver",
            "description": "Save the state of the agent",
            "optional": true,
            "id": "supervisor_0-input-agentMemory-BaseCheckpointSaver"
          },
          {
            "label": "Input Moderation",
            "description": "Detect text that could generate harmful output and prevent it from being sent to the language model",
            "name": "inputModeration",
            "type": "Moderation",
            "optional": true,
            "list": true,
            "id": "supervisor_0-input-inputModeration-Moderation"
          }
        ],
        "inputs": {
          "supervisorName": "Simão Kanda Pedro",
          "supervisorPrompt": "Você é um supervisor de agenda inteligente. Sua função é coordenar as ações dos agente lembrador, informações e agendador para atender às solicitações do usuário da melhor forma possível. Você deve analisar as intenções do usuário em cada mensagem e direcionar a solicitação para o agente mais adequado.\nVoce será resposavel em receber todos detalhes necessarios e fazer o resumo de todas informações vindo do agente lemrador, agente agedador e do agente informante.\nIncluam contextos: \"Lembrar de minha reunião com o cliente amanhã às 14h e enviar um e-mail de confirmação.\"\n\nPermitam múltiplas ações: \"Agendar uma reunião com a equipe de marketing na próxima semana e adicionar ao meu calendário pessoal.\"\n\nConsiderem preferências do usuário: \"Sugerir um horário livre na minha agenda para uma reunião de uma hora.\"\nAdaptem-se a diferentes estilos de linguagem: \"Qual é a minha agenda para amanhã?\" ou \"O que tenho para fazer hoje?\"\n\nnão aceita outra questão se não acerca de agendagem.\n",
          "model": "{{groqChat_0.data.instance}}",
          "agentMemory": "",
          "summarization": true,
          "recursionLimit": 100,
          "inputModeration": ""
        },
        "outputAnchors": [
          {
            "id": "supervisor_0-output-supervisor-Supervisor",
            "name": "supervisor",
            "label": "Supervisor",
            "description": "",
            "type": "Supervisor"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 500,
      "selected": false,
      "positionAbsolute": {
        "x": 231.066390081939,
        "y": -81.08417763120809
      },
      "dragging": false
    },
    {
      "id": "worker_0",
      "position": {
        "x": 591.0703186719062,
        "y": 129.5678472336729
      },
      "type": "customNode",
      "data": {
        "id": "worker_0",
        "label": "Worker",
        "version": 2,
        "name": "worker",
        "type": "Worker",
        "baseClasses": [
          "Worker"
        ],
        "category": "Multi Agents",
        "inputParams": [
          {
            "label": "Worker Name",
            "name": "workerName",
            "type": "string",
            "placeholder": "Worker",
            "id": "worker_0-input-workerName-string"
          },
          {
            "label": "Worker Prompt",
            "name": "workerPrompt",
            "type": "string",
            "rows": 4,
            "default": "You are a research assistant who can search for up-to-date info using search engine.",
            "id": "worker_0-input-workerPrompt-string"
          },
          {
            "label": "Format Prompt Values",
            "name": "promptValues",
            "type": "json",
            "optional": true,
            "acceptVariable": true,
            "list": true,
            "id": "worker_0-input-promptValues-json"
          },
          {
            "label": "Max Iterations",
            "name": "maxIterations",
            "type": "number",
            "optional": true,
            "id": "worker_0-input-maxIterations-number"
          }
        ],
        "inputAnchors": [
          {
            "label": "Tools",
            "name": "tools",
            "type": "Tool",
            "list": true,
            "optional": true,
            "id": "worker_0-input-tools-Tool"
          },
          {
            "label": "Supervisor",
            "name": "supervisor",
            "type": "Supervisor",
            "id": "worker_0-input-supervisor-Supervisor"
          },
          {
            "label": "Tool Calling Chat Model",
            "name": "model",
            "type": "BaseChatModel",
            "optional": true,
            "description": "Only compatible with models that are capable of function calling: ChatOpenAI, ChatMistral, ChatAnthropic, ChatGoogleGenerativeAI, ChatVertexAI, GroqChat. If not specified, supervisor's model will be used",
            "id": "worker_0-input-model-BaseChatModel"
          }
        ],
        "inputs": {
          "workerName": "agente Agendador",
          "workerPrompt": "Um agente de agendador é um componente fundamental para automatizar tarefas e processos que precisam ser executados em momentos específicos. Ele funciona como um cronômetro digital dentro da plataforma, permitindo que você defina quando determinadas ações devem ocorrer.\n\nFunções Principais:\n\nExecução Automática de Fluxos: O agente pode ser configurado para iniciar um fluxo específico em uma data e hora pré-definidas, ou repetidamente em intervalos regulares.\n\nGatilhos para Eventos: Ao ser acionado, o agente pode servir como gatilho para outros eventos dentro  da agenda, como enviar notificações, atualizar dados ou integrar com outros sistemas.\n\nCriação de Lembretes: Pode ser utilizado para enviar lembretes a usuários ou equipes sobre prazos, reuniões ou outras tarefas importantes.\nAutomação de Processos Repetitivos: Tarefas que precisam ser realizadas com frequência, como backups de dados, relatórios ou atualizações de sistemas, podem ser automatizadas com o agente de agendamento.\n\nObjetivo do agendador:\n\nO objetivo principal de um agente de agendador  é otimizar processos e aumentar a produtividade. Ao automatizar tarefas repetitivas e garantir que ações sejam executadas no momento certo, o agente contribui para:\n\nRedução de erros humanos: Ao eliminar a necessidade de intervenção manual em tarefas repetitivas, a chance de erros diminui significativamente.\n\nAumento da eficiência: As tarefas são executadas automaticamente, liberando tempo para que os usuários se concentrem em atividades de maior valor agregado.\n\nMelhoria da organização: O agente ajuda a manter a organização dos processos, garantindo que as tarefas sejam realizadas dentro dos prazos estabelecidos.\n\nMaior controle sobre os processos: Com o agente de agendamento, é possível ter uma visão mais clara de quando as tarefas são executadas e garantir que tudo ocorra conforme o planejado.\n\n\"Em qual data você gostaria de agendar a reunião?\"\n\"Qual o horário ideal para você?\"\n\"Quais são os participantes da reunião?\"\n\"Gostaria de adicionar alguma observação à reunião?\"",
          "tools": "",
          "supervisor": "{{supervisor_0.data.instance}}",
          "model": "",
          "promptValues": "",
          "maxIterations": ""
        },
        "outputAnchors": [],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 740,
      "selected": false,
      "positionAbsolute": {
        "x": 591.0703186719062,
        "y": 129.5678472336729
      },
      "dragging": false
    },
    {
      "id": "worker_1",
      "position": {
        "x": 1444.8585236630315,
        "y": -177.64244624129702
      },
      "type": "customNode",
      "data": {
        "id": "worker_1",
        "label": "Worker",
        "version": 2,
        "name": "worker",
        "type": "Worker",
        "baseClasses": [
          "Worker"
        ],
        "category": "Multi Agents",
        "inputParams": [
          {
            "label": "Worker Name",
            "name": "workerName",
            "type": "string",
            "placeholder": "Worker",
            "id": "worker_1-input-workerName-string"
          },
          {
            "label": "Worker Prompt",
            "name": "workerPrompt",
            "type": "string",
            "rows": 4,
            "default": "You are a research assistant who can search for up-to-date info using search engine.",
            "id": "worker_1-input-workerPrompt-string"
          },
          {
            "label": "Format Prompt Values",
            "name": "promptValues",
            "type": "json",
            "optional": true,
            "acceptVariable": true,
            "list": true,
            "id": "worker_1-input-promptValues-json"
          },
          {
            "label": "Max Iterations",
            "name": "maxIterations",
            "type": "number",
            "optional": true,
            "id": "worker_1-input-maxIterations-number"
          }
        ],
        "inputAnchors": [
          {
            "label": "Tools",
            "name": "tools",
            "type": "Tool",
            "list": true,
            "optional": true,
            "id": "worker_1-input-tools-Tool"
          },
          {
            "label": "Supervisor",
            "name": "supervisor",
            "type": "Supervisor",
            "id": "worker_1-input-supervisor-Supervisor"
          },
          {
            "label": "Tool Calling Chat Model",
            "name": "model",
            "type": "BaseChatModel",
            "optional": true,
            "description": "Only compatible with models that are capable of function calling: ChatOpenAI, ChatMistral, ChatAnthropic, ChatGoogleGenerativeAI, ChatVertexAI, GroqChat. If not specified, supervisor's model will be used",
            "id": "worker_1-input-model-BaseChatModel"
          }
        ],
        "inputs": {
          "workerName": "Agente informante",
          "workerPrompt": "Um agente de informações é como um assistente virtual personalizado, projetado para coletar, processar e fornecer informações específicas vindo do agente lembrador. Ele funciona como um intermediário entre você e diversos sistemas e fontes de dados, automatizando a busca por informações relevantes e apresentando-as de forma organizada.\n\nFunções Principais:\n\nBusca e coleta de dados: O agente pode ser configurado para buscar informações em diversas fontes, como agente lembrador e agendador , APIs, sites da web e outros sistemas.\n\nProcessamento de informações: Os dados coletados podem ser processados e formatados de acordo com as suas necessidades, como extrair informações específicas, realizar cálculos ou gerar relatórios.\n\n\nObjetivo:\n\nO objetivo principal de um agente de informações é aumentar a eficiência e a produtividade ao automatizar a busca e o processamento de informações. Ao delegar essas tarefas ao agente, você pode se concentrar em atividades de maior valor agregado.\n\nExemplos de Uso:\n\n\"Qual tipo de informação você busca?\" (eventos, aniversários, feriados)\n\"Em qual data você está interessado?\"\nGerenciamento de projetos: O agente pode acompanhar o progresso de projetos, identificar possíveis atrasos e gerar alertas.\nAutomação de tarefas: O agente pode automatizar tarefas repetitivas, como a coleta de dados de mercado ou a geração de documentos",
          "tools": "",
          "supervisor": "{{supervisor_0.data.instance}}",
          "model": "",
          "promptValues": "",
          "maxIterations": ""
        },
        "outputAnchors": [],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 740,
      "selected": false,
      "positionAbsolute": {
        "x": 1444.8585236630315,
        "y": -177.64244624129702
      },
      "dragging": false
    },
    {
      "id": "worker_2",
      "position": {
        "x": 1028.6051919564238,
        "y": -146.5311821225107
      },
      "type": "customNode",
      "data": {
        "id": "worker_2",
        "label": "Worker",
        "version": 2,
        "name": "worker",
        "type": "Worker",
        "baseClasses": [
          "Worker"
        ],
        "category": "Multi Agents",
        "inputParams": [
          {
            "label": "Worker Name",
            "name": "workerName",
            "type": "string",
            "placeholder": "Worker",
            "id": "worker_2-input-workerName-string"
          },
          {
            "label": "Worker Prompt",
            "name": "workerPrompt",
            "type": "string",
            "rows": 4,
            "default": "You are a research assistant who can search for up-to-date info using search engine.",
            "id": "worker_2-input-workerPrompt-string"
          },
          {
            "label": "Format Prompt Values",
            "name": "promptValues",
            "type": "json",
            "optional": true,
            "acceptVariable": true,
            "list": true,
            "id": "worker_2-input-promptValues-json"
          },
          {
            "label": "Max Iterations",
            "name": "maxIterations",
            "type": "number",
            "optional": true,
            "id": "worker_2-input-maxIterations-number"
          }
        ],
        "inputAnchors": [
          {
            "label": "Tools",
            "name": "tools",
            "type": "Tool",
            "list": true,
            "optional": true,
            "id": "worker_2-input-tools-Tool"
          },
          {
            "label": "Supervisor",
            "name": "supervisor",
            "type": "Supervisor",
            "id": "worker_2-input-supervisor-Supervisor"
          },
          {
            "label": "Tool Calling Chat Model",
            "name": "model",
            "type": "BaseChatModel",
            "optional": true,
            "description": "Only compatible with models that are capable of function calling: ChatOpenAI, ChatMistral, ChatAnthropic, ChatGoogleGenerativeAI, ChatVertexAI, GroqChat. If not specified, supervisor's model will be used",
            "id": "worker_2-input-model-BaseChatModel"
          }
        ],
        "inputs": {
          "workerName": "Agente lembrador",
          "workerPrompt": "Um agente de lembrador é como uma secretária virtual personalizada, projetada para te lembrar de tarefas, compromissos e prazos importantes. Ele funciona como um alarme inteligente, garantindo que você não se esqueça de nada.\n\nFunções Principais:\n\nLembretes personalizados: Você pode configurar o agente para te lembrar de qualquer coisa, desde reuniões importantes até aniversários de amigos.\n\nAgendamento flexível: Os lembretes podem ser agendados para um dia e hora específicos, ou podem ser repetitivos (diariamente, semanalmente, mensalmente).\n\nMúltiplas plataformas: Os lembretes podem ser enviados para diversos dispositivos, como e-mail, aplicativos de mensagens ou notificações push.\n\nIntegração com calendários: O agente pode se integrar com seu calendário pessoal, sincronizando suas tarefas e compromissos.\n\nObjetivo do Lembrador:\n\nO objetivo principal de um agente de lembrador é aumentar sua produtividade e organização. Ao automatizar as tarefas de lembrar, você pode se concentrar em atividades mais importantes e evitar o estresse de esquecer compromissos.\n\nExemplos de Uso:\n\nTarefas profissionais: Lembrar de prazos de entrega, reuniões e follow-ups com clientes.\nVida pessoal: Lembrar de aniversários, compromissos médicos e pagamentos de contas.\nObjetivos pessoais: Lembrar de seus objetivos e metas, como praticar exercícios físicos ou aprender um novo idioma\n\n\"De qual evento você gostaria de ser lembrado?\"\n\"Em qual data e horário você gostaria de receber o lembrete?\"",
          "tools": "",
          "supervisor": "{{supervisor_0.data.instance}}",
          "model": "",
          "promptValues": "",
          "maxIterations": ""
        },
        "outputAnchors": [],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 740,
      "selected": false,
      "positionAbsolute": {
        "x": 1028.6051919564238,
        "y": -146.5311821225107
      },
      "dragging": false
    },
    {
      "id": "groqChat_0",
      "position": {
        "x": -271.6099451620697,
        "y": -67.21327307985231
      },
      "type": "customNode",
      "data": {
        "id": "groqChat_0",
        "label": "GroqChat",
        "version": 3,
        "name": "groqChat",
        "type": "GroqChat",
        "baseClasses": [
          "GroqChat",
          "BaseChatModel",
          "BaseLanguageModel",
          "Runnable"
        ],
        "category": "Chat Models",
        "description": "Wrapper around Groq API with LPU Inference Engine",
        "inputParams": [
          {
            "label": "Connect Credential",
            "name": "credential",
            "type": "credential",
            "credentialNames": [
              "groqApi"
            ],
            "optional": true,
            "id": "groqChat_0-input-credential-credential"
          },
          {
            "label": "Model Name",
            "name": "modelName",
            "type": "asyncOptions",
            "loadMethod": "listModels",
            "placeholder": "llama3-70b-8192",
            "id": "groqChat_0-input-modelName-asyncOptions"
          },
          {
            "label": "Temperature",
            "name": "temperature",
            "type": "number",
            "step": 0.1,
            "default": 0.9,
            "optional": true,
            "id": "groqChat_0-input-temperature-number"
          }
        ],
        "inputAnchors": [
          {
            "label": "Cache",
            "name": "cache",
            "type": "BaseCache",
            "optional": true,
            "id": "groqChat_0-input-cache-BaseCache"
          }
        ],
        "inputs": {
          "cache": "",
          "modelName": "llama-3.1-8b-instant",
          "temperature": "0.9"
        },
        "outputAnchors": [
          {
            "id": "groqChat_0-output-groqChat-GroqChat|BaseChatModel|BaseLanguageModel|Runnable",
            "name": "groqChat",
            "label": "GroqChat",
            "description": "Wrapper around Groq API with LPU Inference Engine",
            "type": "GroqChat | BaseChatModel | BaseLanguageModel | Runnable"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 520,
      "selected": false,
      "positionAbsolute": {
        "x": -271.6099451620697,
        "y": -67.21327307985231
      },
      "dragging": false
    }
  ],
  "edges": [
    {
      "source": "supervisor_0",
      "sourceHandle": "supervisor_0-output-supervisor-Supervisor",
      "target": "worker_0",
      "targetHandle": "worker_0-input-supervisor-Supervisor",
      "type": "buttonedge",
      "id": "supervisor_0-supervisor_0-output-supervisor-Supervisor-worker_0-worker_0-input-supervisor-Supervisor"
    },
    {
      "source": "supervisor_0",
      "sourceHandle": "supervisor_0-output-supervisor-Supervisor",
      "target": "worker_2",
      "targetHandle": "worker_2-input-supervisor-Supervisor",
      "type": "buttonedge",
      "id": "supervisor_0-supervisor_0-output-supervisor-Supervisor-worker_2-worker_2-input-supervisor-Supervisor"
    },
    {
      "source": "supervisor_0",
      "sourceHandle": "supervisor_0-output-supervisor-Supervisor",
      "target": "worker_1",
      "targetHandle": "worker_1-input-supervisor-Supervisor",
      "type": "buttonedge",
      "id": "supervisor_0-supervisor_0-output-supervisor-Supervisor-worker_1-worker_1-input-supervisor-Supervisor"
    },
    {
      "source": "groqChat_0",
      "sourceHandle": "groqChat_0-output-groqChat-GroqChat|BaseChatModel|BaseLanguageModel|Runnable",
      "target": "supervisor_0",
      "targetHandle": "supervisor_0-input-model-BaseChatModel",
      "type": "buttonedge",
      "id": "groqChat_0-groqChat_0-output-groqChat-GroqChat|BaseChatModel|BaseLanguageModel|Runnable-supervisor_0-supervisor_0-input-model-BaseChatModel"
    }
  ]
}